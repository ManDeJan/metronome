const builtin = @import("builtin");
const rom = @import("rom.zig");
const std = @import("std");

const debug = std.debug;
const mem = std.mem;
const testing = std.testing;

const lu16 = rom.int.lu16;

pub const Version = enum {
    red,
    blue,
    yellow,

    gold,
    silver,
    crystal,

    ruby,
    sapphire,
    emerald,
    fire_red,
    leaf_green,

    diamond,
    pearl,
    platinum,
    heart_gold,
    soul_silver,

    black,
    white,
    black2,
    white2,

    x,
    y,
    omega_ruby,
    alpha_sapphire,

    sun,
    moon,
    ultra_sun,
    ultra_moon,
};

pub const Stats = extern struct {
    hp: u8,
    attack: u8,
    defense: u8,
    speed: u8,
    sp_attack: u8,
    sp_defense: u8,

    comptime {
        std.debug.assert(@sizeOf(Stats) == 6);
    }
};

pub const MoveCategory = packed enum(u8) {
    physical = 0x00,
    status = 0x01,
    special = 0x02,
};

pub const GrowthRate = packed enum(u8) {
    medium_fast = 0x00,
    erratic = 0x01,
    fluctuating = 0x02,
    medium_slow = 0x03,
    fast = 0x04,
    slow = 0x05,
};

pub const EggGroup = packed enum(u4) {
    invalid = 0x00, // TODO: Figure out if there is a 0x00 egg group
    monster = 0x01,
    water1 = 0x02,
    bug = 0x03,
    flying = 0x04,
    field = 0x05,
    fairy = 0x06,
    grass = 0x07,
    human_like = 0x08,
    water3 = 0x09,
    mineral = 0x0A,
    amorphous = 0x0B,
    water2 = 0x0C,
    ditto = 0x0D,
    dragon = 0x0E,
    undiscovered = 0x0F,
};

pub const Color = packed enum(u7) {
    red = 0x00,
    blue = 0x01,
    yellow = 0x02,
    green = 0x03,
    black = 0x04,
    brown = 0x05,
    purple = 0x06,
    gray = 0x07,
    white = 0x08,
    pink = 0x09,

    // HACK: This is a workaround for invalid colors in games.
    unknown_0x_a = 0xA,
    unknown_0x_b = 0xB,
    unknown_0x_c = 0xC,
    unknown_0x_d = 0xD,
    unknown_0x_e = 0xE,
    unknown_0x_f = 0xF,
    unknown_0x10 = 0x10,
    unknown_0x11 = 0x11,
    unknown_0x12 = 0x12,
    unknown_0x13 = 0x13,
    unknown_0x14 = 0x14,
    unknown_0x15 = 0x15,
    unknown_0x16 = 0x16,
    unknown_0x17 = 0x17,
    unknown_0x18 = 0x18,
    unknown_0x19 = 0x19,
    unknown_0x1_a = 0x1A,
    unknown_0x1_b = 0x1B,
    unknown_0x1_c = 0x1C,
    unknown_0x1_d = 0x1D,
    unknown_0x1_e = 0x1E,
    unknown_0x1_f = 0x1F,
    unknown_0x20 = 0x20,
    unknown_0x21 = 0x21,
    unknown_0x22 = 0x22,
    unknown_0x23 = 0x23,
    unknown_0x24 = 0x24,
    unknown_0x25 = 0x25,
    unknown_0x26 = 0x26,
    unknown_0x27 = 0x27,
    unknown_0x28 = 0x28,
    unknown_0x29 = 0x29,
    unknown_0x2_a = 0x2A,
    unknown_0x2_b = 0x2B,
    unknown_0x2_c = 0x2C,
    unknown_0x2_d = 0x2D,
    unknown_0x2_e = 0x2E,
    unknown_0x2_f = 0x2F,
    unknown_0x30 = 0x30,
    unknown_0x31 = 0x31,
    unknown_0x32 = 0x32,
    unknown_0x33 = 0x33,
    unknown_0x34 = 0x34,
    unknown_0x35 = 0x35,
    unknown_0x36 = 0x36,
    unknown_0x37 = 0x37,
    unknown_0x38 = 0x38,
    unknown_0x39 = 0x39,
    unknown_0x3_a = 0x3A,
    unknown_0x3_b = 0x3B,
    unknown_0x3_c = 0x3C,
    unknown_0x3_d = 0x3D,
    unknown_0x3_e = 0x3E,
    unknown_0x3_f = 0x3F,
    unknown_0x40 = 0x40,
    unknown_0x41 = 0x41,
    unknown_0x42 = 0x42,
    unknown_0x43 = 0x43,
    unknown_0x44 = 0x44,
    unknown_0x45 = 0x45,
    unknown_0x46 = 0x46,
    unknown_0x47 = 0x47,
    unknown_0x48 = 0x48,
    unknown_0x49 = 0x49,
    unknown_0x4_a = 0x4A,
    unknown_0x4_b = 0x4B,
    unknown_0x4_c = 0x4C,
    unknown_0x4_d = 0x4D,
    unknown_0x4_e = 0x4E,
    unknown_0x4_f = 0x4F,
    unknown_0x50 = 0x50,
    unknown_0x51 = 0x51,
    unknown_0x52 = 0x52,
    unknown_0x53 = 0x53,
    unknown_0x54 = 0x54,
    unknown_0x55 = 0x55,
    unknown_0x56 = 0x56,
    unknown_0x57 = 0x57,
    unknown_0x58 = 0x58,
    unknown_0x59 = 0x59,
    unknown_0x5_a = 0x5A,
    unknown_0x5_b = 0x5B,
    unknown_0x5_c = 0x5C,
    unknown_0x5_d = 0x5D,
    unknown_0x5_e = 0x5E,
    unknown_0x5_f = 0x5F,
    unknown_0x60 = 0x60,
    unknown_0x61 = 0x61,
    unknown_0x62 = 0x62,
    unknown_0x63 = 0x63,
    unknown_0x64 = 0x64,
    unknown_0x65 = 0x65,
    unknown_0x66 = 0x66,
    unknown_0x67 = 0x67,
    unknown_0x68 = 0x68,
    unknown_0x69 = 0x69,
    unknown_0x6_a = 0x6A,
    unknown_0x6_b = 0x6B,
    unknown_0x6_c = 0x6C,
    unknown_0x6_d = 0x6D,
    unknown_0x6_e = 0x6E,
    unknown_0x6_f = 0x6F,
    unknown_0x70 = 0x70,
    unknown_0x71 = 0x71,
    unknown_0x72 = 0x72,
    unknown_0x73 = 0x73,
    unknown_0x74 = 0x74,
    unknown_0x75 = 0x75,
    unknown_0x76 = 0x76,
    unknown_0x77 = 0x77,
    unknown_0x78 = 0x78,
    unknown_0x79 = 0x79,
    unknown_0x7_a = 0x7A,
    unknown_0x7_b = 0x7B,
    unknown_0x7_c = 0x7C,
    unknown_0x7_d = 0x7D,
    unknown_0x7_e = 0x7E,
    unknown_0x7_f = 0x7F,
};

// Common between gen3-4
pub const EvoMethod = packed enum(u8) {
    unused = 0x00,
    friend_ship = 0x01,
    friend_ship_during_day = 0x02,
    friend_ship_during_night = 0x03,
    level_up = 0x04,
    trade = 0x05,
    trade_holding_item = 0x06,
    use_item = 0x07,
    attack_gth_defense = 0x08,
    attack_eql_defense = 0x09,
    attack_lth_defense = 0x0A,
    personality_value1 = 0x0B,
    personality_value2 = 0x0C,
    level_up_may_spawn_pokemon = 0x0D,
    level_up_spawn_if_cond = 0x0E,
    beauty = 0x0F,
    use_item_on_male = 0x10,
    use_item_on_female = 0x11,
    level_up_holding_item_during_daytime = 0x12,
    level_up_holding_item_during_the_night = 0x13,
    level_up_knowning_move = 0x14,
    level_up_with_other_pokemon_in_party = 0x15,
    level_up_male = 0x16,
    level_up_female = 0x17,
    level_up_in_special_magnetic_field = 0x18,
    level_up_near_moss_rock = 0x19,
    level_up_near_ice_rock = 0x1A,
    unknown_0x1_b = 0x1B,
    unknown_0x1_c = 0x1C,
    unknown_0x1_d = 0x1D,
    unknown_0x1_e = 0x1E,
    unknown_0x1_f = 0x1F,
    unknown_0x20 = 0x20,
    unknown_0x21 = 0x21,
    unknown_0x22 = 0x22,
    unknown_0x23 = 0x23,
    unknown_0x24 = 0x24,
    unknown_0x25 = 0x25,
    unknown_0x26 = 0x26,
    unknown_0x27 = 0x27,
    unknown_0x28 = 0x28,
    unknown_0x29 = 0x29,
    unknown_0x2_a = 0x2A,
    unknown_0x2_b = 0x2B,
    unknown_0x2_c = 0x2C,
    unknown_0x2_d = 0x2D,
    unknown_0x2_e = 0x2E,
    unknown_0x2_f = 0x2F,
    unknown_0x30 = 0x30,
    unknown_0x31 = 0x31,
    unknown_0x32 = 0x32,
    unknown_0x33 = 0x33,
    unknown_0x34 = 0x34,
    unknown_0x35 = 0x35,
    unknown_0x36 = 0x36,
    unknown_0x37 = 0x37,
    unknown_0x38 = 0x38,
    unknown_0x39 = 0x39,
    unknown_0x3_a = 0x3A,
    unknown_0x3_b = 0x3B,
    unknown_0x3_c = 0x3C,
    unknown_0x3_d = 0x3D,
    unknown_0x3_e = 0x3E,
    unknown_0x3_f = 0x3F,
    unknown_0x40 = 0x40,
    unknown_0x41 = 0x41,
    unknown_0x42 = 0x42,
    unknown_0x43 = 0x43,
    unknown_0x44 = 0x44,
    unknown_0x45 = 0x45,
    unknown_0x46 = 0x46,
    unknown_0x47 = 0x47,
    unknown_0x48 = 0x48,
    unknown_0x49 = 0x49,
    unknown_0x4_a = 0x4A,
    unknown_0x4_b = 0x4B,
    unknown_0x4_c = 0x4C,
    unknown_0x4_d = 0x4D,
    unknown_0x4_e = 0x4E,
    unknown_0x4_f = 0x4F,
    unknown_0x50 = 0x50,
    unknown_0x51 = 0x51,
    unknown_0x52 = 0x52,
    unknown_0x53 = 0x53,
    unknown_0x54 = 0x54,
    unknown_0x55 = 0x55,
    unknown_0x56 = 0x56,
    unknown_0x57 = 0x57,
    unknown_0x58 = 0x58,
    unknown_0x59 = 0x59,
    unknown_0x5_a = 0x5A,
    unknown_0x5_b = 0x5B,
    unknown_0x5_c = 0x5C,
    unknown_0x5_d = 0x5D,
    unknown_0x5_e = 0x5E,
    unknown_0x5_f = 0x5F,
    unknown_0x60 = 0x60,
    unknown_0x61 = 0x61,
    unknown_0x62 = 0x62,
    unknown_0x63 = 0x63,
    unknown_0x64 = 0x64,
    unknown_0x65 = 0x65,
    unknown_0x66 = 0x66,
    unknown_0x67 = 0x67,
    unknown_0x68 = 0x68,
    unknown_0x69 = 0x69,
    unknown_0x6_a = 0x6A,
    unknown_0x6_b = 0x6B,
    unknown_0x6_c = 0x6C,
    unknown_0x6_d = 0x6D,
    unknown_0x6_e = 0x6E,
    unknown_0x6_f = 0x6F,
    unknown_0x70 = 0x70,
    unknown_0x71 = 0x71,
    unknown_0x72 = 0x72,
    unknown_0x73 = 0x73,
    unknown_0x74 = 0x74,
    unknown_0x75 = 0x75,
    unknown_0x76 = 0x76,
    unknown_0x77 = 0x77,
    unknown_0x78 = 0x78,
    unknown_0x79 = 0x79,
    unknown_0x7_a = 0x7A,
    unknown_0x7_b = 0x7B,
    unknown_0x7_c = 0x7C,
    unknown_0x7_d = 0x7D,
    unknown_0x7_e = 0x7E,
    unknown_0x7_f = 0x7F,
    unknown_0x80 = 0x80,
    unknown_0x81 = 0x81,
    unknown_0x82 = 0x82,
    unknown_0x83 = 0x83,
    unknown_0x84 = 0x84,
    unknown_0x85 = 0x85,
    unknown_0x86 = 0x86,
    unknown_0x87 = 0x87,
    unknown_0x88 = 0x88,
    unknown_0x89 = 0x89,
    unknown_0x8_a = 0x8A,
    unknown_0x8_b = 0x8B,
    unknown_0x8_c = 0x8C,
    unknown_0x8_d = 0x8D,
    unknown_0x8_e = 0x8E,
    unknown_0x8_f = 0x8F,
    unknown_0x90 = 0x90,
    unknown_0x91 = 0x91,
    unknown_0x92 = 0x92,
    unknown_0x93 = 0x93,
    unknown_0x94 = 0x94,
    unknown_0x95 = 0x95,
    unknown_0x96 = 0x96,
    unknown_0x97 = 0x97,
    unknown_0x98 = 0x98,
    unknown_0x99 = 0x99,
    unknown_0x9_a = 0x9A,
    unknown_0x9_b = 0x9B,
    unknown_0x9_c = 0x9C,
    unknown_0x9_d = 0x9D,
    unknown_0x9_e = 0x9E,
    unknown_0x9_f = 0x9F,
    unknown_0x_a0 = 0xA0,
    unknown_0x_a1 = 0xA1,
    unknown_0x_a2 = 0xA2,
    unknown_0x_a3 = 0xA3,
    unknown_0x_a4 = 0xA4,
    unknown_0x_a5 = 0xA5,
    unknown_0x_a6 = 0xA6,
    unknown_0x_a7 = 0xA7,
    unknown_0x_a8 = 0xA8,
    unknown_0x_a9 = 0xA9,
    unknown_0x_a_a = 0xAA,
    unknown_0x_a_b = 0xAB,
    unknown_0x_a_c = 0xAC,
    unknown_0x_a_d = 0xAD,
    unknown_0x_a_e = 0xAE,
    unknown_0x_a_f = 0xAF,
    unknown_0x_b0 = 0xB0,
    unknown_0x_b1 = 0xB1,
    unknown_0x_b2 = 0xB2,
    unknown_0x_b3 = 0xB3,
    unknown_0x_b4 = 0xB4,
    unknown_0x_b5 = 0xB5,
    unknown_0x_b6 = 0xB6,
    unknown_0x_b7 = 0xB7,
    unknown_0x_b8 = 0xB8,
    unknown_0x_b9 = 0xB9,
    unknown_0x_b_a = 0xBA,
    unknown_0x_b_b = 0xBB,
    unknown_0x_b_c = 0xBC,
    unknown_0x_b_d = 0xBD,
    unknown_0x_b_e = 0xBE,
    unknown_0x_b_f = 0xBF,
    unknown_0x_c0 = 0xC0,
    unknown_0x_c1 = 0xC1,
    unknown_0x_c2 = 0xC2,
    unknown_0x_c3 = 0xC3,
    unknown_0x_c4 = 0xC4,
    unknown_0x_c5 = 0xC5,
    unknown_0x_c6 = 0xC6,
    unknown_0x_c7 = 0xC7,
    unknown_0x_c8 = 0xC8,
    unknown_0x_c9 = 0xC9,
    unknown_0x_c_a = 0xCA,
    unknown_0x_c_b = 0xCB,
    unknown_0x_c_c = 0xCC,
    unknown_0x_c_d = 0xCD,
    unknown_0x_c_e = 0xCE,
    unknown_0x_c_f = 0xCF,
    unknown_0x_d0 = 0xD0,
    unknown_0x_d1 = 0xD1,
    unknown_0x_d2 = 0xD2,
    unknown_0x_d3 = 0xD3,
    unknown_0x_d4 = 0xD4,
    unknown_0x_d5 = 0xD5,
    unknown_0x_d6 = 0xD6,
    unknown_0x_d7 = 0xD7,
    unknown_0x_d8 = 0xD8,
    unknown_0x_d9 = 0xD9,
    unknown_0x_d_a = 0xDA,
    unknown_0x_d_b = 0xDB,
    unknown_0x_d_c = 0xDC,
    unknown_0x_d_d = 0xDD,
    unknown_0x_d_e = 0xDE,
    unknown_0x_d_f = 0xDF,
    unknown_0x_e0 = 0xE0,
    unknown_0x_e1 = 0xE1,
    unknown_0x_e2 = 0xE2,
    unknown_0x_e3 = 0xE3,
    unknown_0x_e4 = 0xE4,
    unknown_0x_e5 = 0xE5,
    unknown_0x_e6 = 0xE6,
    unknown_0x_e7 = 0xE7,
    unknown_0x_e8 = 0xE8,
    unknown_0x_e9 = 0xE9,
    unknown_0x_e_a = 0xEA,
    unknown_0x_e_b = 0xEB,
    unknown_0x_e_c = 0xEC,
    unknown_0x_e_d = 0xED,
    unknown_0x_e_e = 0xEE,
    unknown_0x_e_f = 0xEF,
    unknown_0x_f0 = 0xF0,
    unknown_0x_f1 = 0xF1,
    unknown_0x_f2 = 0xF2,
    unknown_0x_f3 = 0xF3,
    unknown_0x_f4 = 0xF4,
    unknown_0x_f5 = 0xF5,
    unknown_0x_f6 = 0xF6,
    unknown_0x_f7 = 0xF7,
    unknown_0x_f8 = 0xF8,
    unknown_0x_f9 = 0xF9,
    unknown_0x_f_a = 0xFA,
    unknown_0x_f_b = 0xFB,
    unknown_0x_f_c = 0xFC,
    unknown_0x_f_d = 0xFD,
    unknown_0x_f_e = 0xFE,
    unknown_0x_f_f = 0xFF,
};

// TODO: Figure out if the this have the same layout in all games that have it.
//       They probably have, so let's assume that for now and if a bug
//       is ever encountered related to this, we figure it out.
pub const EvYield = packed struct {
    hp: u2,
    attack: u2,
    defense: u2,
    speed: u2,
    sp_attack: u2,
    sp_defense: u2,
    padding: u4,

    comptime {
        std.debug.assert(@sizeOf(EvYield) == 2);
    }
};

pub const legendaries = []u16{
    144, 145, 146, // Articuno, Zapdos, Moltres
    150, 151, 243, // Mewtwo, Mew, Raikou
    244, 245, 249, // Entei, Suicune, Lugia
    250, 251, 377, // Ho-Oh, Celebi, Regirock
    378, 379, 380, // Regice, Registeel, Latias
    381, 382, 383, // Latios, Kyogre, Groudon,
    384, 385, 386, // Rayquaza, Jirachi, Deoxys
    480, 481, 482, // Uxie, Mesprit, Azelf
    483, 484, 485, // Dialga, Palkia, Heatran
    486, 487, 488, // Regigigas, Giratina, Cresselia
    489, 490, 491, // Phione, Manaphy, Darkrai
    492, 493, 494, // Shaymin, Arceus, Victini
    638, 639, 640, // Cobalion, Terrakion, Virizion
    641, 642, 643, // Tornadus, Thundurus, Reshiram
    644, 645, 646, // Zekrom, Landorus, Kyurem
    647, 648, 649, // Keldeo, Meloetta, Genesect
    716, 717, 718, // Xerneas, Yveltal, Zygarde
    719, 720, 721, // Diancie, Hoopa, Volcanion
};
